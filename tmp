//iso init code
$( function() {
    // init Isotope
    var $container = $('.isotope').isotope({
itemSelector: '.element-item',
    layoutMode: 'masonry',
    //getSortData: {
      //name: '.name',
      //symbol: '.symbol',
      //number: '.number parseInt',
      //category: '[data-category]',
      //weight: function( itemElem ) {
        //var weight = $( itemElem ).find('.weight').text();
        //return parseFloat( weight.replace( /[\(\)]/g, '') );
      //}
    //}
  });

  // filter functions
  var filterFns = {
    // show if number is greater than 50
    numberGreaterThan50: function() {
      var number = $(this).find('.number').text();
      return parseInt( number, 10 ) > 50;
    },
    // show if name ends with -ium
    ium: function() {
      var name = $(this).find('.name').text();
      return name.match( /ium$/ );
    },
    hasImg: function() {
      var img = $(this).find('.Image_URL');
      //img[0].src contains the URL
      return img.length != 0;
    }
  };

  // bind filter button click
  $('#filters').on( 'click', 'button', function() {
    var filterValue = $( this ).attr('data-filter');
    // use filterFn if matches value
    filterValue = filterFns[ filterValue ] || filterValue;
    $container.isotope({ filter: filterValue });
  });

  
  // change is-checked class on buttons
  $('.button-group').each( function( i, buttonGroup ) {
    var $buttonGroup = $( buttonGroup );
    $buttonGroup.on( 'click', 'button', function() {
      $buttonGroup.find('.is-checked').removeClass('is-checked');
      $( this ).addClass('is-checked');
    });
  });
  
});


